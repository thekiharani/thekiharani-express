// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              String    @id @default(uuid()) @db.VarChar(60)
  surname         String?   @db.VarChar(100)
  otherNames      String    @db.VarChar(100)
  email           String    @unique @db.VarChar(100)
  phoneNumber     String?   @unique @db.VarChar(20)
  otpCode         String?   @db.VarChar(8)
  isVerified      Boolean   @default(false)
  isActive        Boolean   @default(false)
  isApproved      Boolean   @default(false)
  isStaff         Boolean   @default(false)
  isAdmin         Boolean   @default(false)
  isMaster        Boolean   @default(false)
  password        String    @db.VarChar(100)
  approverId      String?   @db.VarChar(60)
  emailVerifiedAt DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  deletedAt       DateTime?
  postsAuthored   Post[]    @relation(name: "author")
  postsApproved   Post[]    @relation(name: "approver")
  approver        User?     @relation(name: "approved", fields: [approverId], references: [id])
  usersApproved   User[]    @relation(name: "approved")

  @@map(name: "users")
}

model Post {
  id              String    @id @default(uuid()) @db.VarChar(60)
  title           String    @db.VarChar(300)
  summary         String?   @db.VarChar(500)
  body            String    @unique @db.VarChar(10000)
  isPublished     Boolean   @default(false)
  isApproved      Boolean   @default(false)
  approverComment String?   @db.VarChar(300)
  authorId        String    @db.VarChar(60)
  approverId      String?   @db.VarChar(60)
  publishedAt     DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  deletedAt       DateTime?
  // posts       Post[]
  author          User      @relation(name: "author", fields: [authorId], references: [id])
  approver        User?     @relation(name: "approver", fields: [approverId], references: [id])

  @@map(name: "posts")
}
